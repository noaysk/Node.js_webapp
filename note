Node.jsは本来クライアント側の言語であるJavaScriptをサーバーサイドで動かすための仕組み

ExpressはNode.jsでWebアプリの開発をするためのフレームワーク
Node.jsには便利な機能を簡単に使えるようにまとめたパッケージというものがあります。Expressもパッケージの１つ

パッケージを用意するにはnpm (Node Package Manager)というシステムを使います。npmにはパッケージを共有・取得する機能がある。

Expressを使うには、インストールしたパッケージの読み込みと、実際に使用するための準備が必要です。ここは定型文として覚えておく
app.js
const express = require('express');
const app = express();

サーバーを起動すれば、サーバーがリクエストを受け取りレスポンスを返すことができるようになる

listenメソッドを用意してapp.jsファイルを実行するとサーバーを起動することができます。ファイルを実行するには「node ファイル名」とします。
app.js
app.listen(3000);
ターミナル
node app.js

/topにリクエストが来た時に、トップ画面を表示することができる。URLに対応する処理を実行することをルーティングという。
ルーティングの処理でres.renderと書くことで、指定したビューファイルをブラウザに表示
app.get('/', (req, res) => {
  res.render('top.ejs')
});
ルーティングの処理では、req(リクエストの略)・res(レスポンスの略)の２つの引数を受け取ります。reqやresには、リクエスト・レスポンスに関する情報が入っています。

ブラウザに表示する見た目部分にはEJSという形式のファイルを使い、viewsフォルダに配置



EJSは、HTMLとJavaScriptのコード両方を記述できるNode.jsのパッケージ
EJSはnpmからインストールすることで使うことができる
npm install ejs

JavaScriptのコードを記述するには、<% %>または<%= %>で囲みます。
<% %>で囲んだ場合はブラウザに何も表示されないので、変数の定義などに用います。変数の値などをブラウザに表示したい場合は<%= %>を用います。

EJSを使うメリット
EJSでforEachを利用するとHTMLを直接記述するよりもスッキリ書くことができ、さらに管理しやすくなります。

--2
Node.jsからMySQLを操作するにはNode.jsからMySQLに接続する必要がある
npm install mysql 

別のURLに再度リクエストさせる仕組みをリダイレクトと言います。

リダイレクト後のリロード
リダイレクトを用いると、追加処理後に/indexにリクエストして一覧画面を表示することができます。これによりメモ作成後にリロードしても、追加処理が実行されないのでメモが増えません。
res.redirectメソッド
res.redirect('/index');
リダイレクトを使う場面はいくつかありますが、よくあるのは今回のようにpostメソッドでリクエストした時です。こういう時はres.renderではなくres.redirectを使って、getのルーティングにリダイレクトしてあげましょう。